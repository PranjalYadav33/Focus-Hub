#!/usr/bin/env node

import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Create a simple 1x1 transparent PNG as base64
const transparentPng = 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChAI9jU77mgAAAABJRU5ErkJggg==';

// Icon sizes needed for PWA
const iconSizes = [72, 96, 128, 144, 152, 192, 384, 512];

const publicDir = path.join(__dirname, '..', 'public');

// Create placeholder icons
iconSizes.forEach(size => {
    const filename = size === 512 ? 'icon.png' : `icon-${size}x${size}.png`;
    const filepath = path.join(publicDir, filename);
    
    // Create a simple colored square as placeholder
    const canvas = `<svg width="${size}" height="${size}" xmlns="http://www.w3.org/2000/svg">
        <defs>
            <linearGradient id="grad" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" style="stop-color:#4ECDC4;stop-opacity:1" />
                <stop offset="50%" style="stop-color:#FFE66D;stop-opacity:1" />
                <stop offset="100%" style="stop-color:#FF6B9D;stop-opacity:1" />
            </linearGradient>
        </defs>
        <rect width="${size}" height="${size}" rx="${size * 0.15}" fill="url(#grad)"/>
        <circle cx="${size/2}" cy="${size/2}" r="${size * 0.2}" fill="none" stroke="#2E294E" stroke-width="${size * 0.02}"/>
        <circle cx="${size/2}" cy="${size/2}" r="${size * 0.05}" fill="#2E294E"/>
        <line x1="${size/2}" y1="${size/2}" x2="${size/2}" y2="${size * 0.3}" stroke="#2E294E" stroke-width="${size * 0.015}" stroke-linecap="round"/>
        <line x1="${size/2}" y1="${size/2}" x2="${size * 0.7}" y2="${size/2}" stroke="#2E294E" stroke-width="${size * 0.01}" stroke-linecap="round"/>
    </svg>`;
    
    // For now, just create a simple text file that indicates the icon should be here
    const placeholder = `<!-- PWA Icon Placeholder: ${filename} -->
<!-- This is a placeholder. Replace with actual ${size}x${size} PNG icon -->
<!-- Generated by create-placeholder-icons.js -->
${canvas}`;
    
    fs.writeFileSync(filepath.replace('.png', '.svg'), placeholder);
    console.log(`📝 Created placeholder: ${filename.replace('.png', '.svg')}`);
});

console.log('');
console.log('⚠️  IMPORTANT: These are SVG placeholders!');
console.log('🔧 To create proper PNG icons:');
console.log('   1. Open scripts/icon-generator.html in your browser');
console.log('   2. Download all the PNG files');
console.log('   3. Save them to the public/ directory');
console.log('   4. Remove the .svg placeholder files');
console.log('');
console.log('📁 Or copy existing PNG icons to public/ with these names:');
iconSizes.forEach(size => {
    const filename = size === 512 ? 'icon.png' : `icon-${size}x${size}.png`;
    console.log(`   - ${filename}`);
});
